{
    "entities": [
        {
            "id": "0ee7f4f2-0b26-42af-bcf9-0b78dac256ff",
            "type": "faq",
            "languageCode": "en-US",
            "article": null,
            "faq": {
                "question": "Does Python have a ternary conditional operator?",
                "answer": "<code>x = a if condition else b</code> First condition is evaluated, then exactly one of either a or b is evaluated and returned based on the Boolean value of condition. If condition evaluates to True, then a is evaluated and returned but b is ignored, or else when b is evaluated and returned but a is ignored. This allows short-circuiting because when condition is true only a is evaluated and b is not evaluated at all, but when condition is false only b is evaluated and a is not evaluated at all.",
                "alternatives": [
                    "ternary operator",
                    "Is there a ternary in Python?",
                    "?: operator in python"
                ]
            },
            "categories": [],
            "knowledgeBase": {
                "id": "5fc006cc-edf7-4e8d-8736-68a176833a63",
                "name": "Python FAQ",
                "description": "Everything you need to know about python",
                "coreLanguage": "en-US",
                "dateCreated": "2019-10-20T07:18:08.050Z",
                "dateModified": "2019-10-20T07:18:08.050Z",
                "selfUri": null
            },
            "externalUrl": "https://stackoverflow.com/questions/394809/does-python-have-a-ternary-conditional-operator\n",
            "selfUri": null,
            "dateCreated": "2019-10-20T07:21:25.925Z",
            "dateModified": "2019-10-20T07:21:25.925Z"
        },
        {
            "id": "7ad07e86-3c27-41c1-9a1b-419abd775b6d",
            "type": "faq",
            "languageCode": "en-US",
            "article": null,
            "faq": {
                "question": "How do I check whether a file exists without exceptions?",
                "answer": "\"<code>from pathlib import Path<newline><newline>my_file = Path(\"\"/path/to/file\"\")<newline>if my_file.is_file():<newline>    # file exists</code> If the reason you're checking is so you can do something like if file_exists: open_it(), it's safer to use a try around the attempt to open it. Checking and then opening risks the file being deleted or moved or something between when you check and when you try to open it.\"",
                "alternatives": [
                    "Does file exists?",
                    "check if file exists"
                ]
            },
            "categories": [],
            "knowledgeBase": {
                "id": "5fc006cc-edf7-4e8d-8736-68a176833a63",
                "name": "Python FAQ",
                "description": "Everything you need to know about python",
                "coreLanguage": "en-US",
                "dateCreated": "2019-10-20T07:18:08.050Z",
                "dateModified": "2019-10-20T07:18:08.050Z",
                "selfUri": null
            },
            "externalUrl": "https://stackoverflow.com/questions/82831/how-do-i-check-whether-a-file-exists-without-exceptions\n",
            "selfUri": null,
            "dateCreated": "2019-10-20T07:21:25.953Z",
            "dateModified": "2019-10-20T07:21:25.953Z"
        },
        {
            "id": "874931a6-9b7b-4bb6-85c6-cae5bfeac221",
            "type": "faq",
            "languageCode": "en-US",
            "article": null,
            "faq": {
                "question": "How do you call an external command",
                "answer": "\"<code>import subprocess<newline>subprocess.run([\"\"ls\"\", \"\"-l\"\"])</code>Look at the subprocess module in the standard library. The advantage of subprocess vs. system is that it is more flexible (you can get the stdout, stderr, the \"\"real\"\" status code, better error handling, etc...).\"",
                "alternatives": [
                    "Executing shell commands"
                ]
            },
            "categories": [],
            "knowledgeBase": {
                "id": "5fc006cc-edf7-4e8d-8736-68a176833a63",
                "name": "Python FAQ",
                "description": "Everything you need to know about python",
                "coreLanguage": "en-US",
                "dateCreated": "2019-10-20T07:18:08.050Z",
                "dateModified": "2019-10-20T07:18:08.050Z",
                "selfUri": null
            },
            "externalUrl": "https://stackoverflow.com/questions/89228/calling-an-external-command-in-python\n",
            "selfUri": null,
            "dateCreated": "2019-10-20T07:21:25.980Z",
            "dateModified": "2019-10-20T07:21:25.980Z"
        },
        {
            "id": "03f57f7e-5eb6-49e6-bf2c-cbd8e3e81e53",
            "type": "faq",
            "languageCode": "en-US",
            "article": null,
            "faq": {
                "question": "How do I merge two dictionaries in a signle expression?",
                "answer": "<code>z = {**x, **y}</code>For dictionaries x and y, z becomes a shallowly merged dictionary with values from y replacing those from x",
                "alternatives": [
                    "Merging dictionaries",
                    "combine dictionaries"
                ]
            },
            "categories": [],
            "knowledgeBase": {
                "id": "5fc006cc-edf7-4e8d-8736-68a176833a63",
                "name": "Python FAQ",
                "description": "Everything you need to know about python",
                "coreLanguage": "en-US",
                "dateCreated": "2019-10-20T07:18:08.050Z",
                "dateModified": "2019-10-20T07:18:08.050Z",
                "selfUri": null
            },
            "externalUrl": "https://stackoverflow.com/questions/38987/how-do-i-merge-two-dictionaries-in-a-single-expression\n",
            "selfUri": null,
            "dateCreated": "2019-10-20T07:21:26.009Z",
            "dateModified": "2019-10-20T07:21:26.009Z"
        },
        {
            "id": "ba407a21-4ed9-4199-aacd-ab489449f1b8",
            "type": "faq",
            "languageCode": "en-US",
            "article": null,
            "faq": {
                "question": "Does Python have a string contains substring method?",
                "answer": "\"<code>if \"\"blah\"\" not in somestring:<newline>    continue</code>You can use the in operator<newline>\"",
                "alternatives": [
                    "String includes substring",
                    "string.indexOf",
                    "string.contains"
                ]
            },
            "categories": [],
            "knowledgeBase": {
                "id": "5fc006cc-edf7-4e8d-8736-68a176833a63",
                "name": "Python FAQ",
                "description": "Everything you need to know about python",
                "coreLanguage": "en-US",
                "dateCreated": "2019-10-20T07:18:08.050Z",
                "dateModified": "2019-10-20T07:18:08.050Z",
                "selfUri": null
            },
            "externalUrl": "https://stackoverflow.com/questions/3437059/does-python-have-a-string-contains-substring-method\n",
            "selfUri": null,
            "dateCreated": "2019-10-20T07:21:26.038Z",
            "dateModified": "2019-10-20T07:21:26.038Z"
        },
        {
            "id": "831b9acb-6136-4fdf-a111-028d145ace77",
            "type": "faq",
            "languageCode": "en-US",
            "article": null,
            "faq": {
                "question": "How do I list all files in a directory",
                "answer": "\"<code>from os import listdir<newline>from os.path import isfile, join<newline>onlyfiles = [f for f in listdir(mypath) if isfile(join(mypath, f))]</code>os.listdir() will get you everything that's in a directory - files and directories.<newline><newline>If you want just files, you could either filter this down using os.path\"",
                "alternatives": [
                    "show files in a directory"
                ]
            },
            "categories": [],
            "knowledgeBase": {
                "id": "5fc006cc-edf7-4e8d-8736-68a176833a63",
                "name": "Python FAQ",
                "description": "Everything you need to know about python",
                "coreLanguage": "en-US",
                "dateCreated": "2019-10-20T07:18:08.050Z",
                "dateModified": "2019-10-20T07:18:08.050Z",
                "selfUri": null
            },
            "externalUrl": "https://stackoverflow.com/questions/3207219/how-do-i-list-all-files-of-a-directory\n",
            "selfUri": null,
            "dateCreated": "2019-10-20T07:21:26.069Z",
            "dateModified": "2019-10-20T07:21:26.069Z"
        },
        {
            "id": "c5b6a54d-3a2d-48e8-918d-ae574fea241b",
            "type": "faq",
            "languageCode": "en-US",
            "article": null,
            "faq": {
                "question": "How do I sort a dictionary by value?",
                "answer": "\"<code>import operator<newline>x = {1: 2, 3: 4, 4: 3, 2: 1, 0: 0}<newline>sorted_x = sorted(x.items(), key=operator.itemgetter(1))</code>It is not possible to sort a dictionary, only to get a representation of a dictionary that is sorted. Dictionaries are inherently orderless, but other types, such as lists and tuples, are not. So you need an ordered data type to represent sorted values, which will be a listâ€”probably a list of tuples.\"",
                "alternatives": [
                    "Sorting dictionary"
                ]
            },
            "categories": [],
            "knowledgeBase": {
                "id": "5fc006cc-edf7-4e8d-8736-68a176833a63",
                "name": "Python FAQ",
                "description": "Everything you need to know about python",
                "coreLanguage": "en-US",
                "dateCreated": "2019-10-20T07:18:08.050Z",
                "dateModified": "2019-10-20T07:18:08.050Z",
                "selfUri": null
            },
            "externalUrl": "https://stackoverflow.com/questions/613183/how-do-i-sort-a-dictionary-by-value\n",
            "selfUri": null,
            "dateCreated": "2019-10-20T07:21:26.100Z",
            "dateModified": "2019-10-20T07:21:26.100Z"
        },
        {
            "id": "e4346b1c-4788-4567-884a-7b7e31e18f8a",
            "type": "faq",
            "languageCode": "en-US",
            "article": null,
            "faq": {
                "question": "How can I access the index in for loops?",
                "answer": "\"<code>for idx, val in enumerate(ints):<newline>    print(idx, val)</code>The better option is to use the built-in functionÂ enumerate(), available in both Python 2 and 3:\"",
                "alternatives": [
                    "index of for loops"
                ]
            },
            "categories": [],
            "knowledgeBase": {
                "id": "5fc006cc-edf7-4e8d-8736-68a176833a63",
                "name": "Python FAQ",
                "description": "Everything you need to know about python",
                "coreLanguage": "en-US",
                "dateCreated": "2019-10-20T07:18:08.050Z",
                "dateModified": "2019-10-20T07:18:08.050Z",
                "selfUri": null
            },
            "externalUrl": "https://stackoverflow.com/questions/522563/accessing-the-index-in-for-loops\n",
            "selfUri": null,
            "dateCreated": "2019-10-20T07:21:26.128Z",
            "dateModified": "2019-10-20T07:21:26.128Z"
        },
        {
            "id": "7ed16e6a-a54d-43ba-8553-efff19973ab2",
            "type": "faq",
            "languageCode": "en-US",
            "article": null,
            "faq": {
                "question": "How do I check if a list is empty?",
                "answer": "\"<code>if not a:<newline>  print(\"\"List is empty\"\")</code>Using the implicit booleanness of the empty list is quite pythonic.\"",
                "alternatives": [
                    "is list empty?"
                ]
            },
            "categories": [],
            "knowledgeBase": {
                "id": "5fc006cc-edf7-4e8d-8736-68a176833a63",
                "name": "Python FAQ",
                "description": "Everything you need to know about python",
                "coreLanguage": "en-US",
                "dateCreated": "2019-10-20T07:18:08.050Z",
                "dateModified": "2019-10-20T07:18:08.050Z",
                "selfUri": null
            },
            "externalUrl": "https://stackoverflow.com/questions/53513/how-do-i-check-if-a-list-is-empty\n",
            "selfUri": null,
            "dateCreated": "2019-10-20T07:21:26.156Z",
            "dateModified": "2019-10-20T07:21:26.156Z"
        },
        {
            "id": "70ee9c48-15b1-4f42-bd7f-1dda79405662",
            "type": "faq",
            "languageCode": "en-US",
            "article": null,
            "faq": {
                "question": "How do I access sub array",
                "answer": "\"<code>a[start:stop]  # items start through stop-1<newline>a[start:]      # items start through the rest of the array<newline>a[:stop]       # items from the beginning through stop-1<newline>a[:]           # a copy of the whole array</code>\"",
                "alternatives": [
                    "How do I use slice notation?",
                    "How to extract sub array",
                    "arr[a:b]"
                ]
            },
            "categories": [],
            "knowledgeBase": {
                "id": "5fc006cc-edf7-4e8d-8736-68a176833a63",
                "name": "Python FAQ",
                "description": "Everything you need to know about python",
                "coreLanguage": "en-US",
                "dateCreated": "2019-10-20T07:18:08.050Z",
                "dateModified": "2019-10-20T07:18:08.050Z",
                "selfUri": null
            },
            "externalUrl": "https://stackoverflow.com/questions/509211/understanding-slice-notation",
            "selfUri": null,
            "dateCreated": "2019-10-20T07:21:26.194Z",
            "dateModified": "2019-10-20T07:21:26.194Z"
        }
    ],
    "count": 10
}